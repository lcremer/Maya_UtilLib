from pymel import core as pc, core


def arrow():
    c = pc.curve(d=1, p=[(-1, 0, -0.4600257077),
                         (-4.484920881e-005, 0, -0.2209238449),
                         (0, 0, -0.66),
                         (0.99, 0, 0),
                         (0, 0, 0.66),
                         (-4.484920881e-005, 0, 0.2209238449),
                         (-1, 0, 0.4600257077,),
                         (-1, 0, -0.4600257077),
                         (-1, 0, -0.4600257077)])
    return pc.rename(c, 'arrow#')


def circle_cross():
    c = pc.curve(d=1, p=[(2.865490119e-032, 0.8179224464, -5.670627187e-017),
                         (9.891247577e-017, 0.7941551068, -0.1957416536),
                         (1.92076518e-016, 0.7242343588, -0.3801075138),
                         (2.740777712e-016, 0.6122237424, -0.542382907),
                         (3.401506205e-016, 0.4646329075, -0.6731369771),
                         (3.864551522e-016, 0.2900392968, -0.7647707728),
                         (4.10300315e-016, 0.09858965641, -0.8119588708),
                         (4.10300315e-016, -0.09858965641, -0.8119588708),
                         (3.864551522e-016, -0.2900392968, -0.7647707728),
                         (3.401506205e-016, -0.4646329075, -0.6731369771),
                         (2.740777712e-016, -0.6122237424, -0.542382907),
                         (1.92076518e-016, -0.7242343588, -0.3801075138),
                         (9.891247577e-017, -0.7941551068, -0.1957416536),
                         (1.099554263e-031, -0.8179224464, -2.175949676e-016),
                         (-9.891247577e-017, -0.7941551068, 0.1957416536),
                         (-1.92076518e-016, -0.7242343588, 0.3801075138),
                         (-2.740777712e-016, -0.6122237424, 0.542382907),
                         (-3.401506205e-016, -0.4646329075, 0.6731369771),
                         (-3.864551522e-016, -0.2900392968, 0.7647707728),
                         (-4.10300315e-016, -0.09858965641, 0.8119588708),
                         (-4.10300315e-016, 0.09858965641, 0.8119588708),
                         (-3.864551522e-016, 0.2900392968, 0.7647707728),
                         (-3.401506205e-016, 0.4646329075, 0.6731369771),
                         (-2.740777712e-016, 0.6122237424, 0.542382907),
                         (-1.92076518e-016, 0.7242343588, 0.3801075138),
                         (-9.891247577e-017, 0.7941551068, 0.1957416536),
                         (2.865490119e-032, 0.8179224464, -5.670627187e-017),
                         (0, 1.15366584, 0),
                         (0, -1.15366584, 0),
                         (0, 0, 0),
                         (5.123305514e-016, 0, -1.15366584),
                         (-5.123305514e-016, 0, 1.15366584)])
    return pc.rename(c, 'circleCross#')


def sphere_cross():
    c = pc.curve(d=1, p=[(0, 0.81, 0),
                         (0, 0.7483428, 0.30997323),
                         (0, 0.57275667, 0.57275667),
                         (0, 0.30997323, 0.7483428),
                         (0, 0, 0.81),
                         (0, -0.30997323, 0.7483428),
                         (0, -0.57275667, 0.57275667),
                         (0, -0.7483428, 0.30997323),
                         (0, -0.81, 0),
                         (0, -0.7483428, -0.30997323),
                         (0, -0.57275667, -0.57275667),
                         (0, -0.30997323, -0.7483428),
                         (0, 0, -0.81),
                         (0, 0.30997323, -0.7483428),
                         (0, 0.57275667, -0.57275667),
                         (0, 0.7483428, -0.30997323),
                         (0, 0.81, 0),
                         (0.30997323, 0.7483428, 0),
                         (0.57275667, 0.57275667, 0),
                         (0.7483428, 0.30997323, 0),
                         (0.81, 0, 0),
                         (0.7483428, -0.30997323, 0),
                         (0.57275667, -0.57275667, 0),
                         (0.30997323, -0.7483428, 0),
                         (0, -0.81, 0),
                         (-0.30997323, -0.7483428, 0),
                         (-0.57275667, -0.57275667, 0),
                         (-0.7483428, -0.30997323, 0),
                         (-0.81, 0, 0),
                         (-0.7483428, 0, 0.30997323),
                         (-0.57275667, 0, 0.57275667),
                         (-0.30997323, 0, 0.7483428),
                         (0, 0, 0.81),
                         (0.30997323, 0, 0.7483428),
                         (0.57275667, 0, 0.57275667),
                         (0.7483428, 0, 0.30997323),
                         (0.81, 0, 0),
                         (0.7483428, 0, -0.30997323),
                         (0.57275667, 0, -0.57275667),
                         (0.30997323, 0, -0.7483428),
                         (0, 0, -0.81),
                         (-0.30997323, 0, -0.7483428),
                         (-0.57275667, 0, -0.57275667),
                         (-0.7483428, 0, -0.30997323),
                         (-0.81, 0, 0),
                         (-0.7483428, 0.30997323, 0),
                         (-0.57275667, 0.57275667, 0),
                         (-0.30997323, 0.7483428, 0),
                         (0, 0.81, 0),
                         (0, 1.258172363, 0),
                         (0, -1.258172363, 0),
                         (0, 0, 0),
                         (-1.258172363, 0, 0),
                         (1.258172363, 0, 0),
                         (0, 0, 0),
                         (0, 0, -1.258172363),
                         (0, 0, 1.258172363)])
    return pc.rename(c, 'shareCross#')


def pyramid():
    c = pc.curve(d=1, p=[(0.9427995506, -6.280306612e-016, 0),
                         (-0.001697091955, -0.4722483213, -0.4722483213),
                         (-0.001697091955, 0.4722483213, -0.4722483213),
                         (0.9427995506, -6.280306612e-016, 0),
                         (-0.001697091955, 0.4722483213, 0.4722483213),
                         (-0.001697091955, -0.4722483213, 0.4722483213),
                         (0.9427995506, -6.280306612e-016, 0),
                         (-0.001697091955, -0.4722483213, -0.4722483213),
                         (-0.001697091955, -0.4722483213, 0.4722483213),
                         (-0.001697091955, 0.4722483213, 0.4722483213),
                         (-0.001697091955, 0.4722483213, -0.4722483213)])
    return pc.rename(c, 'pyramid#')


def pin1():
    c = pc.curve(d=1, p=[(0, 0.7074835877, 0),
                         (-1.779797547e-017, 0.7183189811, 0.08015495567),
                         (-3.439014528e-017, 0.7492709624, 0.1548794455),
                         (-4.867644528e-017, 0.7982872269, 0.2192192208),
                         (-5.95602423e-017, 0.862627002, 0.268235485),
                         (-6.643296284e-017, 0.9373514918, 0.2991874667),
                         (-6.883890347e-017, 1.017506448, 0.31002286),
                         (-6.643296284e-017, 1.097661403, 0.2991874667),
                         (-5.95602423e-017, 1.172385679, 0.268235485),
                         (-4.867644528e-017, 1.236725668, 0.2192192208),
                         (-3.439014528e-017, 1.285741718, 0.1548794455),
                         (-1.779797547e-017, 1.316694129, 0.08015495567),
                         (0, 1.327526732, 0),
                         (1.779797547e-017, 1.316694129, -0.08015495567),
                         (3.439014528e-017, 1.285741718, -0.1548794455),
                         (4.867644528e-017, 1.236725668, -0.2192192208),
                         (5.95602423e-017, 1.172385679, -0.268235485),
                         (6.643296284e-017, 1.097661403, -0.2991874667),
                         (6.883890347e-017, 1.017506448, -0.31002286),
                         (6.643296284e-017, 0.9373514918, -0.2991874667),
                         (5.95602423e-017, 0.862627002, -0.268235485),
                         (4.867644528e-017, 0.7982872269, -0.2192192208),
                         (3.439014528e-017, 0.7492709624, -0.1548794455),
                         (1.779797547e-017, 0.7183189811, -0.08015495567),
                         (0, 0.7074835877, 0),
                         (0, 0.006634036807, 0)])
    return pc.rename(c, 'pin_#')


def pin2():
    c = pc.curve(d=1, p=[(0, 0.7664121853, 0),
                         (-6.019612782e-017, 0.7664121853, 0.2710992588),
                         (0, 1.308610703, 0),
                         (6.019612782e-017, 0.7664121853, -0.2710992588),
                         (0, 0.7664121853, 0),
                         (0, 0.2418021392, 0),
                         (1.37027501e-017, 0.2334619526, -0.06171170025),
                         (2.647716852e-017, 0.209631484, -0.1192425663),
                         (3.747627715e-017, 0.1718938223, -0.1687781478),
                         (4.585578759e-017, 0.1223580618, -0.2065161079),
                         (5.114712182e-017, 0.06482731508, -0.2303461588),
                         (5.299946575e-017, 0.003115541396, -0.2386883742),
                         (5.114712182e-017, -0.05859614509, -0.2303461588),
                         (4.585578759e-017, -0.1161270111, -0.2065161079),
                         (3.747627715e-017, -0.1656625927, -0.1687781478),
                         (2.647716852e-017, -0.2034005527, -0.1192425663),
                         (1.37027501e-017, -0.2272306036, -0.06171170025),
                         (0, -0.235572819, 0),
                         (-1.37027501e-017, -0.2272306036, 0.06171170025),
                         (-2.647716852e-017, -0.2034005527, 0.1192425663),
                         (-3.747627715e-017, -0.1656625927, 0.1687781478),
                         (-4.585578759e-017, -0.1161270111, 0.2065161079),
                         (-5.114712182e-017, -0.05859614509, 0.2303461588),
                         (-5.299946575e-017, 0.003115541396, 0.2386883742),
                         (-5.114712182e-017, 0.06482731508, 0.2303461588),
                         (-4.585578759e-017, 0.1223580618, 0.2065161079),
                         (-3.747627715e-017, 0.1718938223, 0.1687781478),
                         (-2.647716852e-017, 0.209631484, 0.1192425663),
                         (-1.37027501e-017, 0.2334619526, 0.06171170025),
                         (0, 0.2418021392, 0)])
    return pc.rename(c, 'pin2_#')


def directions():
    c = pc.curve(d=1, p=[(0.125549239, 0, -0.5968321265),
                         (0, 0, -0.6800040397),
                         (-0.125549239, 0, -0.5968321265),
                         (0, 0, -1.124413359),
                         (0.125549239, 0, -0.5968321265),
                         (0, 0, -0.6800040397),
                         (0, 0.125549239, -0.5968321265),
                         (0, 0, -1.124413359),
                         (0, -0.125549239, -0.5968321265),
                         (0, 0, -0.6800040397),
                         (0, 0, 0),
                         (0, 0, 0.6800040397),
                         (-0.125549239, 0, 0.5968321265),
                         (0, 0, 1.124413359),
                         (0.125549239, 0, 0.5968321265),
                         (0, 0, 0.6800040397),
                         (0, -0.125549239, 0.5968321265),
                         (0, 0, 1.124413359),
                         (0, 0.125549239, 0.5968321265),
                         (0, 0, 0.6800040397),
                         (0, 0, 0),
                         (0.6800040397, 0, 0),
                         (0.5968321265, 0, 0.125549239),
                         (1.124413359, 0, 0),
                         (0.5968321265, 0, -0.125549239),
                         (0.6800040397, 0, 0),
                         (0.5968321265, 0.125549239, 0),
                         (1.124413359, 0, 0),
                         (0.5968321265, -0.125549239, 0),
                         (0.6800040397, 0, 0),
                         (0, 0, 0),
                         (-0.6800040397, 0, 0),
                         (-0.5968321265, 0, 0.125549239),
                         (-1.124413359, 0, 0),
                         (-0.5968321265, 0, -0.125549239),
                         (-0.6800040397, 0, 0),
                         (-0.5968321265, 0.125549239, 0),
                         (-1.124413359, 0, 0),
                         (-0.5968321265, -0.125549239, 0),
                         (-0.6800040397, 0, 0),
                         (0, 0, 0),
                         (0, 0.6800040397, 0),
                         (-0.125549239, 0.5968321265, 0),
                         (0, 1.124413359, 0),
                         (0.125549239, 0.5968321265, 0),
                         (0, 0.6800040397, 0),
                         (0, 0.5968321265, 0.125549239),
                         (0, 1.124413359, 0),
                         (0, 0.5968321265, -0.125549239),
                         (0, 0.6800040397, 0),
                         (0, 0, 0),
                         (0, -0.6800040397, 0),
                         (-0.125549239, -0.5968321265, 0),
                         (0, -1.124413359, 0),
                         (0.125549239, -0.5968321265, 0),
                         (0, -0.6800040397, 0),
                         (0, -0.5968321265, -0.125549239),
                         (0, -1.124413359, 0),
                         (0, -0.5968321265, 0.125549239),
                         (0, -0.68000403970, 0)])
    return pc.rename(c, 'directions#')


def trans():
    c = pc.curve(d=1, p=[(0.0370019084, 1.047626021, 0.06089893756),
                         (-0.02819964277, 1.047626021, 0.06089893756),
                         (0.004401155917, 1.286683866, 0.00443274417),
                         (0.0370019084, 1.047626021, 0.06089893756),
                         (0.06960270709, 1.047626021, 0.00443274417),
                         (0.004401155917, 1.286683866, 0.00443274417),
                         (0.06960270709, 1.047626021, 0.00443274417),
                         (0.03700195461, 1.047626021, -0.05203344922),
                         (0.004401155917, 1.286683866, 0.00443274417),
                         (0.03700195461, 1.047626021, -0.05203344922),
                         (-0.02819959656, 1.047626021, -0.05203349544),
                         (0.004401155917, 1.286683866, 0.00443274417),
                         (-0.02819959656, 1.047626021, -0.05203349544),
                         (-0.06080039525, 1.047626021, 0.004432733813),
                         (0.004401155917, 1.286683866, 0.00443274417),
                         (-0.06080039525, 1.047626021, 0.004432733813),
                         (-0.02819964277, 1.047626021, 0.06089893756),
                         (0.004401155917, 1.286683866, 0.00443274417),
                         (0.004401155917, 0.004401155917, 0.00443274417),
                         (0.004401155917, 0.004401155917, 1.286715455),
                         (-0.05206503748, 0.03700195461, 1.047657609),
                         (0.004401155917, 0.06960270709, 1.047657609),
                         (0.004401155917, 0.004401155917, 1.286715455),
                         (0.06086734931, 0.0370019084, 1.047657609),
                         (0.004401155917, 0.06960270709, 1.047657609),
                         (0.06086734931, 0.0370019084, 1.047657609),
                         (0.06086734931, -0.02819964277, 1.047657609),
                         (0.004401155917, 0.004401155917, 1.286715455),
                         (0.06086734931, -0.02819964277, 1.047657609),
                         (0.00440114556, -0.06080039525, 1.047657609),
                         (0.004401155917, 0.004401155917, 1.286715455),
                         (0.00440114556, -0.06080039525, 1.047657609),
                         (-0.05206508369, -0.02819959656, 1.047657609),
                         (0.004401155917, 0.004401155917, 1.286715455),
                         (-0.05206508369, -0.02819959656, 1.047657609),
                         (-0.05206503748, 0.03700195461, 1.047657609),
                         (0.004401155917, 0.004401155917, 1.286715455),
                         (0.004401155917, 0.004401155917, 0.2652389489),
                         (0.004401155917, 0.2652073607, 0.2652389489),
                         (0.004401155917, 0.2652073607, 0.00443274417),
                         (0.2652073607, 0.2652073607, 0.00443274417),
                         (0.2652073607, 0.004401155917, 0.00443274417),
                         (0.004401155917, 0.004401155917, 0.00443274417),
                         (0.004401155917, 0.004401155917, 0.2652389489),
                         (0.2652073607, 0.004401155917, 0.2652389489),
                         (0.2652073607, 0.004401155917, 0.00443274417),
                         (1.286683866, 0.004401155917, 0.00443274417),
                         (1.047626021, 0.06960270709, 0.00443274417),
                         (1.047626021, 0.0370019084, -0.05203344922),
                         (1.286683866, 0.004401155917, 0.00443274417),
                         (1.047626021, 0.0370019084, -0.05203344922),
                         (1.047626021, -0.02819964277, -0.05203344922),
                         (1.286683866, 0.004401155917, 0.00443274417),
                         (1.047626021, -0.06080039525, 0.004432754528),
                         (1.047626021, -0.02819964277, -0.05203344922),
                         (1.047626021, -0.06080039525, 0.004432754528),
                         (1.047626021, -0.02819959656, 0.06089898378),
                         (1.286683866, 0.004401155917, 0.00443274417),
                         (1.047626021, -0.02819959656, 0.06089898378),
                         (1.047626021, 0.03700195461, 0.06089893756),
                         (1.047626021, 0.06960270709, 0.00443274417),
                         (1.286683866, 0.004401155917, 0.00443274417),
                         (1.047626021, 0.03700195461, 0.06089893756),
                         (0.004401155917, 0.004401155917, 0.00443274417),
                         (0.004401155917, 1.286683866, 0.00443274417),
                         (0.004401155917, 1.286683866, 0.00443274417),
                         (0.004401155917, 1.286683866, 0.00443274417)])
    return pc.rename(c, 'trans#')


def foot():
    c = pc.curve(d=1, p=[(0, 0.96815169, 0.7642173303),
                         (0, 0.953095666, 0.8906663475),
                         (0, 0.91818927, 1.010943576),
                         (0, 0.84947292, 1.160063019),
                         (0, 0.74351763, 1.333617987),
                         (0, 0.59814207, 1.491944782),
                         (0, 0.42164955, 1.617688834),
                         (0, 0.22026654, 1.71610002),
                         (-1.3561182e-006, 0, 1.76816925),
                         (-0.1150828945, 0, 1.7523702),
                         (-0.2288441503, 0, 1.69737849),
                         (-0.3392376632, 0, 1.617786456),
                         (-0.4451946081, 0, 1.491806895),
                         (-0.5459892819, 0, 1.333740363),
                         (-0.6128338888, 0, 1.161522611),
                         (-0.6476141883, 0, 1.011012132),
                         (-0.6686909648, 0, 0.8820301275),
                         (-0.66792762, 0, 0.7650378603),
                         (-0.6805875413, 0, 0.4680189538),
                         (-0.6805876478, 0, 0.03039240174),
                         (-0.6805877546, 0, -0.3163146985),
                         (-0.680587829, 0, -0.60434424),
                         (-0.6805878292, 0, -0.88874577),
                         (-0.6805877911, 0, -1.508925515),
                         (-0.6701888107, 0, -1.54693222),
                         (-0.626864771, 0, -1.593025049),
                         (-0.550769946, 0, -1.615151164),
                         (-0.4788794529, 0, -1.622527753),
                         (0, 0, -1.622528869),
                         (0.4788794529, 0, -1.622527753),
                         (0.550769946, 0, -1.615151164),
                         (0.626864771, 0, -1.593025049),
                         (0.658878906, 0, -1.54693222),
                         (0.6693010174, 0, -1.508925515),
                         (0.6692998104, 0, -0.88874577),
                         (0.6692998176, 0, -0.60434424),
                         (0.6693021748, 0, -0.3163138885),
                         (0.6693055639, 0, 0.03039240174),
                         (0.6693089397, 0, 0.4680197638),
                         (0.66792762, 0, 0.7650378603),
                         (0.64291239, 0.25030215, 0.7642173303),
                         (0.57640005, 0.48366882, 0.7642173303),
                         (0.4710717, 0.68458365, 0.7642173303),
                         (0.33281361, 0.83765826, 0.7642173303),
                         (0.17224164, 0.93431313, 0.7642173303),
                         (0, 0.96815169, 0.7642173303),
                         (-0.17224164, 0.93431313, 0.7642173303),
                         (-0.33281361, 0.83765826, 0.7642173303),
                         (-0.4710717, 0.68458365, 0.7642173303),
                         (-0.57640005, 0.48366882, 0.7642173303),
                         (-0.64291239, 0.25030215, 0.7642173303),
                         (-0.66619017, 0, 0.7642173303),
                         (-0.6686909648, 0, 0.8820301275),
                         (-0.6476141883, 0, 1.011012132),
                         (-0.6128338888, 0, 1.161522611),
                         (-0.5459892819, 0, 1.333740363),
                         (-0.4451946081, 0, 1.491806895),
                         (-0.3392376632, 0, 1.617786456),
                         (-0.2288441503, 0, 1.69737849),
                         (-0.1150828945, 0, 1.7523702),
                         (-1.3561182e-006, 0, 1.76816925),
                         (0.1151974606, 0, 1.75239369),
                         (0.22868765, 0, 1.6973145),
                         (0.339265591, 0, 1.617788126),
                         (0.4452079532, 0, 1.491806858),
                         (0.5459811819, 0, 1.333740361),
                         (0.6128330788, 0, 1.1615227),
                         (0.6476141883, 0, 1.011012135),
                         (0.6686909648, 0, 0.8820325575),
                         (0.66792762, 0, 0.7650378603),
                         (0.64291239, 0.25030215, 0.7642173303),
                         (0.57640005, 0.48366882, 0.7642173303),
                         (0.4710717, 0.68458365, 0.7642173303),
                         (0.33281361, 0.83765826, 0.7642173303),
                         (0.17224164, 0.93431313, 0.7642173303),
                         (0.17224164, 0.93431313, 0.7642173303)])
    return pc.rename(c, 'foot#')


def rot_arrow():
    c = pc.curve(d=1, p=[(-6.601807525e-017, 0.2973189791, 0.951302737),
                         (0.05715012763, 0.613021653, 0.7164228876),
                         (0.05715012763, 0.5321989981, 0.6356002326),
                         (-6.601807525e-017, 0.2973189791, 0.951302737),
                         (0.05715012763, 0.5321989981, 0.6356002326),
                         (-0.05715012763, 0.5321989981, 0.6356002326),
                         (-6.601807525e-017, 0.2973189791, 0.951302737),
                         (-0.05715012763, 0.5321989981, 0.6356002326),
                         (-0.05715012763, 0.613021653, 0.7164228876),
                         (-6.601807525e-017, 0.2973189791, 0.951302737),
                         (0.05715012763, 0.613021653, 0.7164228876),
                         (-0.05715012763, 0.613021653, 0.7164228876),
                         (-6.601807525e-017, 0.2973189791, 0.951302737),
                         (-1.386248579e-016, 0.6243108581, 0.6243108581),
                         (-1.659961922e-016, 0.747580389, 0.4697358225),
                         (-1.850437971e-016, 0.8333631756, 0.291606302),
                         (-1.948124947e-016, 0.8773574785, 0.09885446168),
                         (-1.948124947e-016, 0.8773574785, -0.09885446168),
                         (-1.850437971e-016, 0.8333631756, -0.291606302),
                         (-1.659961922e-016, 0.747580389, -0.4697358225),
                         (-1.386248579e-016, 0.6243108581, -0.6243108581),
                         (-6.601807525e-017, 0.2973189791, -0.951302737),
                         (0.05715012763, 0.5321989981, -0.6356002326),
                         (0.05715012763, 0.613021653, -0.7164228876),
                         (-6.601807525e-017, 0.2973189791, -0.951302737),
                         (0.05715012763, 0.613021653, -0.7164228876),
                         (-0.05715012763, 0.613021653, -0.7164228876),
                         (-6.601807525e-017, 0.2973189791, -0.951302737),
                         (-0.05715012763, 0.5321989981, -0.6356002326),
                         (-0.05715012763, 0.613021653, -0.7164228876),
                         (-0.05715012763, 0.5321989981, -0.6356002326),
                         (0.05715012763, 0.5321989981, -0.6356002326)])
    return pc.rename(c, 'rotArrow#')


def circle_orient():
    c = pc.curve(d=1, p=[(0, 0, -0.2737484795),
                         (0, 0, -1.124885106),
                         (-9.461291464e-018, 4.477446994e-017, -0.9703704894),
                         (-6.690143356e-018, 0.1092583325, -1.015626773),
                         (-1.079420227e-033, 0.1545146155, -1.124885106),
                         (6.690143356e-018, 0.1092583325, -1.234143437),
                         (9.461291464e-018, -8.299010147e-017, -1.279399721),
                         (6.690143356e-018, -0.1092583325, -1.234143437),
                         (-2.850871767e-033, -0.1545146155, -1.124885106),
                         (-6.690143356e-018, -0.1092583325, -1.015626773),
                         (-9.461291464e-018, 4.477446994e-017, -0.9703704894),
                         (4.946798863e-017, -4.339104665e-016, -0.8078735631),
                         (4.486856436e-017, -0.3231515597, -0.7327592642),
                         (3.497915022e-017, -0.5712528746, -0.5712528746),
                         (2.11890328e-017, -0.7232772501, -0.3460431664),
                         (-1.49056704e-032, -0.8078735631, 2.43428071e-016),
                         (-1.728760449e-017, -0.7496689331, 0.2823280067),
                         (-3.497915022e-017, -0.5712528746, 0.5712528746),
                         (-4.459268599e-017, -0.3340286437, 0.7282538283),
                         (-4.946798863e-017, 2.341015471e-016, 0.8078735631),
                         (-4.546374335e-017, 0.2996853784, 0.7424792749),
                         (-3.497915022e-017, 0.5712528746, 0.5712528746),
                         (-1.648250013e-017, 0.7551151587, 0.2691796548),
                         (-5.643706013e-033, 0.8078735631, 9.216871375e-017),
                         (1.897528541e-017, 0.7382524119, -0.3098899277),
                         (3.497915022e-017, 0.5712528746, -0.5712528746),
                         (4.469005572e-017, 0.3301896376, -0.7298439968),
                         (4.946798863e-017, -4.339104665e-016, -0.8078735631),
                         (4.946798863e-017, -4.339104665e-016, -0.8078735631)])
    return pc.rename(c, 'circleOrient#')


def cross():
    c = pc.curve(d=1, p=[(4.340776215e-017, 0.1954911814, -0.1954911814),
                         (1.610899942e-016, 0.725484838, -0.362742419),
                         (1.610899942e-016, 0.725484838, 0.362742419),
                         (4.340776215e-017, 0.1954911814, 0.1954911814),
                         (8.054499711e-017, 0.362742419, 0.725484838),
                         (-8.054499711e-017, -0.362742419, 0.725484838),
                         (-4.340776215e-017, -0.1954911814, 0.1954911814),
                         (-1.610899942e-016, -0.725484838, 0.362742419),
                         (-1.610899942e-016, -0.725484838, -0.362742419),
                         (-4.340776215e-017, -0.1954911814, -0.1954911814),
                         (-8.054499711e-017, -0.362742419, -0.725484838),
                         (8.054499711e-017, 0.362742419, -0.725484838),
                         (4.340776215e-017, 0.1954911814, -0.1954911814)])
    return pc.rename(c, 'cross#')


def square():
    c = pc.curve(d=1, p=[(-1.456834653e-016, -0.6561, 0.6561),
                         (1.456834653e-016, 0.6561, 0.6561),
                         (1.456834653e-016, 0.6561, -0.6561),
                         (-1.456834653e-016, -0.6561, -0.6561),
                         (-1.456834653e-016, -0.6561, 0.6561)])
    return pc.rename(c, 'square#')


def cube1():
    c = pc.curve(d=1, p=[(-0.5, 0.5, 0.5),
                         (0.5, 0.5, 0.5),
                         (0.5, 0.5, -0.5),
                         (-0.5, 0.5, -0.5),
                         (-0.5, 0.5, 0.5),
                         (-0.5, -0.5, 0.5),
                         (-0.5, -0.5, -0.5),
                         (0.5, -0.5, -0.5),
                         (0.5, -0.5, 0.5),
                         (-0.5, -0.5, 0.5),
                         (0.5, -0.5, 0.5),
                         (0.5, 0.5, 0.5),
                         (0.5, 0.5, -0.5),
                         (0.5, -0.5, -0.5),
                         (-0.5, -0.5, -0.5),
                         (-0.5, 0.5, -0.5)])
    return pc.rename(c, 'cube#')


def cube2():
    c = pc.curve(d=3, p=[(1.041729375e-016, 0.59049, 0),
                         (0.1811404472, 0.59049, 0),
                         (0.59049, 0.59049, 0),
                         (0.59049, 0.59049, 0),
                         (0.5904786855, -0.59049, 0),
                         (0.5904786855, -0.59049, 0),
                         (-0.5904863003, -0.59049, 0),
                         (-0.5904863003, -0.59049, 0),
                         (-0.5904936997, 0.59049, 0),
                         (-0.5904936997, 0.59049, 0),
                         (1.041729375e-016, 0.59049, 0),
                         (1.041729375e-016, 0.59049, 0),
                         (1.041729375e-016, 0.59049, 0),
                         (-1.311159403e-016, 0.59049, 0.5904936997),
                         (-1.311159403e-016, 0.59049, 0.5904936997),
                         (-1.311142973e-016, -0.59049, 0.5904863003),
                         (-1.311142973e-016, -0.59049, 0.5904863003),
                         (1.311126064e-016, -0.59049, -0.5904786855),
                         (1.311126064e-016, -0.59049, -0.5904786855),
                         (1.311126064e-016, 0.59049, -0.5904786855),
                         (1.311126064e-016, 0.59049, -0.5904786855),
                         (1.041729375e-016, 0.59049, 0),
                         (1.041729375e-016, 0.59049, 0)])
    return pc.rename(c, 'triangle#')


def orient():
    c = pc.curve(d=3, p=[(-0.604001, 0.0959835, -0.0987656),
                         (-0.500458, 0.500783, -0.0987656),
                         (-0.327886, 0.751175, -0.0987656),
                         (-0.327886, 0.751175, -0.0987656),
                         (-0.327886, 0.751175, -0.336638),
                         (-0.327886, 0.751175, -0.336638),
                         (2.223925488e-016, 1.001567, 0),
                         (2.223925488e-016, 1.001567, 0),
                         (-0.327886, 0.751175, 0.336638),
                         (-0.327886, 0.751175, 0.336638),
                         (-0.327886, 0.751175, 0.0987656),
                         (-0.327886, 0.751175, 0.0987656),
                         (-0.500458, 0.500783, 0.0987656),
                         (-0.604001, 0.0959835, 0.0987656),
                         (-0.604001, 0.0959835, 0.0987656),
                         (-0.500458, 0.0959835, 0.500783),
                         (-0.327886, 0.0959835, 0.751175),
                         (-0.327886, 0.0959835, 0.751175),
                         (-0.327886, 0.336638, 0.751175),
                         (-0.327886, 0.336638, 0.751175),
                         (0, 0, 1.001567),
                         (0, 0, 1.001567),
                         (-0.327886, -0.336638, 0.751175),
                         (-0.327886, -0.336638, 0.751175),
                         (-0.327886, -0.0959835, 0.751175),
                         (-0.327886, -0.0959835, 0.751175),
                         (-0.500458, -0.0959835, 0.500783),
                         (-0.604001, -0.0959835, 0.0987656),
                         (-0.604001, -0.0959835, 0.0987656),
                         (-0.500458, -0.500783, 0.0987656),
                         (-0.327886, -0.751175, 0.0987656),
                         (-0.327886, -0.751175, 0.0987656),
                         (-0.327886, -0.751175, 0.336638),
                         (-0.327886, -0.751175, 0.336638),
                         (-2.223925488e-016, -1.001567, 0),
                         (-2.223925488e-016, -1.001567, 0),
                         (-0.327886, -0.751175, -0.336638),
                         (-0.327886, -0.751175, -0.336638),
                         (-0.327886, -0.751175, -0.0987656),
                         (-0.327886, -0.751175, -0.0987656),
                         (-0.500458, -0.500783, -0.0987656),
                         (-0.604001, -0.0959835, -0.0987656),
                         (-0.604001, -0.0959835, -0.0987656),
                         (-0.500458, -0.0959835, -0.500783),
                         (-0.327886, -0.0959835, -0.751175),
                         (-0.327886, -0.0959835, -0.751175),
                         (-0.327886, -0.336638, -0.751175),
                         (-0.327886, -0.336638, -0.751175),
                         (0, 0, -1.001567),
                         (0, 0, -1.001567),
                         (-0.327886, 0.336638, -0.751175),
                         (-0.327886, 0.336638, -0.751175),
                         (-0.327886, 0.0959835, -0.751175),
                         (-0.327886, 0.0959835, -0.751175),
                         (-0.500458, 0.0959835, -0.500783),
                         (-0.604001, 0.0959835, -0.0987656)])
    return pc.rename(c, 'orient#')


def arc180():
    c = pc.curve(d=3, p=[(4.959819537e-017, 4.959819537e-017, -0.81),
                         (0.1053487739, 4.959819537e-017, -0.81),
                         (0.318352532, 4.701571016e-017, -0.767824816),
                         (0.5875844583, 3.598426668e-017, -0.5876676721),
                         (0.7678485913, 1.947454479e-017, -0.3180434523),
                         (0.8310757043, -8.622540642e-033, 1.408167751e-016),
                         (0.7678485913, -1.947454479e-017, 0.3180434523),
                         (0.5875844583, -3.598426668e-017, 0.5876676721),
                         (0.318352532, -4.701571016e-017, 0.767824816),
                         (0.1053487739, -4.959819537e-017, 0.81),
                         (-1.844902929e-016, -4.959819537e-017, 0.81)])
    return pc.rename(c, 'arc180_#')


def arc240():
    c = pc.curve(d=3, p=[(-0.57275667, 0, -0.57275667),
                         (-0.46191465, 0, -0.68359788),
                         (-0.16671339, 0, -0.84243564),
                         (0.32823063, 0, -0.79269354),
                         (0.71363187, 0, -0.47684457),
                         (0.85818447, 0, 0),
                         (0.71363187, 0, 0.47684457),
                         (0.32823063, 0, 0.79269354),
                         (-0.16671339, 0, 0.84243564),
                         (-0.46191465, 0, 0.68359788),
                         (-0.57275667, 0, 0.57275667)])
    return pc.rename(c, 'arc340_#')


def cone():
    c = pc.curve(d=1, p=[(0.002873577054, -0.2497454755, 0.4325716493),
                         (0.002873577054, 0.2497454755, 0.4325716493),
                         (1.001855479, -6.67369812e-016, -1.436788527e-009),
                         (0.002873577054, -0.2497454755, 0.4325716493),
                         (0.002873577054, -0.4994909509, -1.436788527e-009),
                         (1.001855479, -6.67369812e-016, -1.436788527e-009),
                         (0.002873577054, -0.2497454755, -0.4325716522),
                         (0.002873577054, -0.4994909509, -1.436788527e-009),
                         (1.001855479, -6.67369812e-016, -1.436788527e-009),
                         (0.002873577054, 0.2497454755, -0.4325721517),
                         (0.002873577054, -0.2497454755, -0.4325716522),
                         (1.001855479, -6.67369812e-016, -1.436788527e-009),
                         (0.002873577054, 0.4994909509, -8.078092608e-008),
                         (0.002873577054, 0.2497454755, -0.4325721517),
                         (1.001855479, -6.67369812e-016, -1.436788527e-009),
                         (0.002873577054, 0.2497454755, 0.4325716493),
                         (0.002873577054, 0.4994909509, -8.078092608e-008)])
    return pc.rename(c, 'con#')


def thin_single_arrow():
    c = pc.curve(d=1, p=[(-0.9934243007, 0, -6.617535191e-016),
                         (0.9938004215, 0, 6.620040659e-016),
                         (0.4970868848, 0, -0.4967135367),
                         (0.9938004215, 0, 6.620040659e-016),
                         (0.4970868848, 0, 0.4967135367)])
    return pc.rename(c, 'thinSingleArrow#')


def thin_double_arrow():
    c = pc.curve(d=1, p=[(0.4871958159, 0, -0.4871958159),
                         (0.9743916318, 0, 2.163584049e-016),
                         (0.4871958159, 0, 0.4871958159),
                         (0.9743916318, 0, 2.163584049e-016),
                         (-0.9743916318, 0, -2.163584049e-016),
                         (-0.4871958159, 0, 0.4871958159),
                         (-0.9743916318, 0, -2.163584049e-016),
                         (-0.4871958159, 0, -0.4871958159)])
    return pc.rename(c, 'thinDoubleArrow#')


def thin_rot_arrow90():
    c = pc.curve(d=3, p=[(-0.27502902, 0, 0.440802),
                         (-0.27502902, 0, 0.440802),
                         (-0.27502902, 0, 0.440802),
                         (0, 0, 0.81),
                         (0, 0, 0.81),
                         (0, 0, 0.81),
                         (0, 0, 0.81),
                         (-0.36167634, 0, 1.09484784),
                         (-0.36167634, 0, 1.09484784),
                         (-0.36167634, 0, 1.09484784),
                         (-0.36167634, 0, 1.09484784),
                         (0, 0, 0.81),
                         (0, 0, 0.81),
                         (0, 0, 0.81),
                         (0, 0, 0.81),
                         (-0.1053486, 0, 0.81),
                         (-0.31835268, 0, 0.76782492),
                         (-0.58758453, 0, 0.58766796),
                         (-0.76784841, 0, 0.31804326),
                         (-0.83107539, 0, 0)])
    return pc.rename(c, 'thinRotArrow90_#')


def thin_rot_arrow180():
    c = pc.curve(d=3, p=[(-0.27502902, 0, 0.440802),
                         (-0.27502902, 0, 0.440802),
                         (-0.27502902, 0, 0.440802),
                         (0, 0, 0.81),
                         (0, 0, 0.81),
                         (0, 0, 0.81),
                         (0, 0, 0.81),
                         (-0.36167634, 0, 1.09484784),
                         (-0.36167634, 0, 1.09484784),
                         (-0.36167634, 0, 1.09484784),
                         (-0.36167634, 0, 1.09484784),
                         (0, 0, 0.81),
                         (0, 0, 0.81),
                         (0, 0, 0.81),
                         (0, 0, 0.81),
                         (-0.1053486, 0, 0.81),
                         (-0.31835268, 0, 0.76782492),
                         (-0.58758453, 0, 0.58766796),
                         (-0.76784841, 0, 0.31804326),
                         (-0.83107539, 0, 0),
                         (-0.76784841, 0, -0.31804326),
                         (-0.58758453, 0, -0.58766796),
                         (-0.31835268, 0, -0.76782492),
                         (-0.1053486, 0, -0.81),
                         (0.008670483, 0, -0.81114858),
                         (0.008670483, 0, -0.81114858),
                         (0.008670483, 0, -0.81114858),
                         (0.008670483, 0, -0.81114858),
                         (-0.27502902, 0, -0.440802),
                         (-0.27502902, 0, -0.440802),
                         (-0.27502902, 0, -0.440802),
                         (-0.27502902, 0, -0.440802),
                         (0.008670483, 0, -0.81114858),
                         (0.008670483, 0, -0.81114858),
                         (0.008670483, 0, -0.81114858),
                         (0.008670483, 0, -0.81114858),
                         (-0.36167634, 0, -1.09484784),
                         (-0.36167634, 0, -1.09484784),
                         (-0.36167634, 0, -1.09484784),
                         (-0.36167634, 0, -1.09484784)])
    return pc.rename(c, 'thinRotArrow180_#')


def thin_cross():
    c = pc.curve(d=1, p=[(0.6986460668, 0, -0.2794584267),
                         (0.9781044935, 0, 0),
                         (0.6986460668, 0, 0.2794584267),
                         (0.9781044935, 0, 0),
                         (-0.9781044935, 0, 0),
                         (-0.6986460668, 0, -0.2794584267),
                         (-0.9781044935, 0, 0),
                         (-0.6986460668, 0, 0.2794584267),
                         (-0.9781044935, 0, 0),
                         (0, 0, 0),
                         (0, 0, 0.9781044935),
                         (-0.2794584267, 0, 0.6986460668),
                         (0, 0, 0.9781044935),
                         (0.2794584267, 0, 0.6986460668),
                         (0, 0, 0.9781044935),
                         (0, 0, -0.9781044935),
                         (0.2794584267, 0, -0.6986460668),
                         (0, 0, -0.9781044935),
                         (-0.2794584267, 0, -0.6986460668),
                         (0, 0, -0.9781044935)])
    return pc.rename(c, 'thinCross#')


def fat_cross():
    c = pc.curve(d=1, p=[(0, 0, -0.9857426965),
                         (-0.2950522357, 0, -0.543164343),
                         (-0.1475261178, 0, -0.543164343),
                         (-0.1475261178, 0, -0.1475261178),
                         (-0.543164343, 0, -0.1475261178),
                         (-0.543164343, 0, -0.2950522357),
                         (-0.9857426965, 0, 0),
                         (-0.543164343, 0, 0.2950522357),
                         (-0.543164343, 0, 0.1475261178),
                         (-0.1475261178, 0, 0.1475261178),
                         (-0.1475261178, 0, 0.543164343),
                         (-0.2950522357, 0, 0.543164343),
                         (0, 0, 0.9857426965),
                         (0.2950522357, 0, 0.543164343),
                         (0.1475261178, 0, 0.543164343),
                         (0.1475261178, 0, 0.1475261178),
                         (0.543164343, 0, 0.1475261178),
                         (0.543164343, 0, 0.2950522357),
                         (0.9857426965, 0, 0),
                         (0.543164343, 0, -0.2950522357),
                         (0.543164343, 0, -0.1475261178),
                         (0.1475261178, 0, -0.1475261178),
                         (0.1475261178, 0, -0.543164343),
                         (0.2950522357, 0, -0.543164343),
                         (0, 0, -0.9857426965)])
    return pc.rename(c, 'fatCross#')


def thin_arc180():
    c = pc.curve(d=1, p=[(0.4189341083, 0.5793571471, 9.166635637e-008),
                         (0.4181316444, 0.5665083108, -0.1599816249),
                         (0.4127766551, 0.5331809552, -0.3075376949),
                         (0.3996521119, 0.4865546663, -0.4386360827),
                         (0.3766092947, 0.4317939042, -0.5522784157),
                         (0.3423207756, 0.3727581168, -0.6481423634),
                         (0.2966493739, 0.312739199, -0.7268905189),
                         (0.2408086479, 0.2546013641, -0.7915570026),
                         (0.1737701886, 0.20156971, -0.8429554859),
                         (0.0939582081, 0.159270898, -0.8793662753),
                         (0, 0.1407034979, -0.8938043486),
                         (-0.0939582081, 0.159270898, -0.8793662753),
                         (-0.1737701886, 0.20156971, -0.8429554859),
                         (-0.2408086479, 0.2546013641, -0.7915570026),
                         (-0.2966493739, 0.312739199, -0.7268905189),
                         (-0.3423207756, 0.3727581168, -0.6481423634),
                         (-0.3766092947, 0.4317939042, -0.5522784157),
                         (-0.3996521119, 0.4865546663, -0.4386360827),
                         (-0.4127766551, 0.5331809552, -0.3075376949),
                         (-0.4181316444, 0.5665083108, -0.1599816249),
                         (-0.4189341083, 0.5793571471, 9.166635637e-008),
                         (-0.4113510489, 0.6666777686, 8.262595085e-008),
                         (-0.384183388, 0.750291814, 8.262595085e-008),
                         (-0.3402249552, 0.8264299445, 8.262595085e-008),
                         (-0.2813967324, 0.8917652975, 8.262595085e-008),
                         (-0.2102706388, 0.9434412809, 8.262595085e-008),
                         (-0.1299543164, 0.9792002365, 8.262595085e-008),
                         (-0.04395847762, 0.9974793771, 8.262595085e-008),
                         (0.04395847762, 0.9974793771, 8.262595085e-008),
                         (0.1299543164, 0.9792002365, 8.262595085e-008),
                         (0.2102706388, 0.9434412809, 8.262595085e-008),
                         (0.2813967324, 0.8917652975, 8.262595085e-008),
                         (0.3402249552, 0.8264299445, 8.262595085e-008),
                         (0.384183388, 0.750291814, 8.262595085e-008),
                         (0.4113510489, 0.6666777686, 8.262595085e-008),
                         (0.4189341083, 0.5793571471, 9.166635637e-008),
                         (0.4181316444, 0.5665083108, 0.1599817901),
                         (0.4127766551, 0.5331805069, 0.3075378601),
                         (0.3996521119, 0.4865551146, 0.438636248),
                         (0.3766092947, 0.4317939042, 0.5522790293),
                         (0.3423207756, 0.3727585651, 0.6481420804),
                         (0.2966493739, 0.3127387507, 0.7268915808),
                         (0.2408086479, 0.2546027091, 0.7915562712),
                         (0.1737701886, 0.2015670202, 0.8429574443),
                         (0.0939582081, 0.1592744844, 0.879364199),
                         (0, 0.1406833243, 0.8938170664),
                         (-0.0939582081, 0.1592744844, 0.879364199),
                         (-0.1737701886, 0.2015670202, 0.8429574443),
                         (-0.2408086479, 0.2546027091, 0.7915562712),
                         (-0.2966493739, 0.3127387507, 0.7268915808),
                         (-0.3423207756, 0.3727585651, 0.6481420804),
                         (-0.3766092947, 0.4317939042, 0.5522790293),
                         (-0.3996521119, 0.4865551146, 0.438636248),
                         (-0.4127766551, 0.5331805069, 0.3075378601),
                         (-0.4181316444, 0.5665083108, 0.1599817901),
                         (-0.4189341083, 0.5793571471, 9.166635637e-008)])
    return pc.rename(c, 'fatArc180_#')


def fat_double_arrow():
    c = pc.curve(d=1, p=[(-0.9544239681, 0, -2.119246929e-016),
                         (-0.2545130582, 0, 0.4666072733),
                         (-0.2545130582, 0, 0.2333036366),
                         (0.2545130582, 0, 0.2333036366),
                         (0.2545130582, 0, 0.4666072733),
                         (0.9544239681, 0, 2.119246929e-016),
                         (0.2545130582, 0, -0.4666072733),
                         (0.2545130582, 0, -0.2333036366),
                         (-0.2545130582, 0, -0.2333036366),
                         (-0.2545130582, 0, -0.4666072733),
                         (-0.9544239681, 0, -2.119246929e-016)])
    return pc.rename(c, 'fatDoubleArrow#')


def fat_rot_arrow90():
    c = pc.curve(d=3, p=[(-0.35703261, 0, 0.63881379),
                         (-0.35703261, 0, 0.63881379),
                         (-0.35703261, 0, 0.63881379),
                         (-0.43555158, 0, 0.28326996),
                         (-0.43555158, 0, 0.28326996),
                         (-0.43555158, 0, 0.28326996),
                         (-0.43555158, 0, 0.28326996),
                         (-0.10092762, 0, 0.88816986),
                         (-0.10092762, 0, 0.88816986),
                         (-0.10092762, 0, 0.88816986),
                         (-0.10092762, 0, 0.88816986),
                         (-0.79049277, 0, 0.83941839),
                         (-0.79049277, 0, 0.83941839),
                         (-0.79049277, 0, 0.83941839),
                         (-0.79049277, 0, 0.83941839),
                         (-0.45433386, 0, 0.76645116),
                         (-0.45433386, 0, 0.76645116),
                         (-0.45433386, 0, 0.76645116),
                         (-0.45433386, 0, 0.76645116),
                         (-0.64641969, 0, 0.64640673),
                         (-0.84458862, 0, 0.34986654),
                         (-0.91422432, 0, 0),
                         (-0.91422432, 0, 0),
                         (-0.91422432, 0, 0),
                         (-0.91422432, 0, 0),
                         (-0.74792646, 0, 0),
                         (-0.74792646, 0, 0),
                         (-0.74792646, 0, 0),
                         (-0.74792646, 0, 0),
                         (-0.69110901, 0, 0.28621998),
                         (-0.52874856, 0, 0.52892838),
                         (-0.35703261, 0, 0.63881379)])
    return pc.rename(c, 'fatRotArrow90_#')


def fat_rot_arrow180():
    c = pc.curve(d=3, p=[(-0.35703261, 0, 0.63881379),
                         (-0.35703261, 0, 0.63881379),
                         (-0.35703261, 0, 0.63881379),
                         (-0.43555158, 0, 0.28326996),
                         (-0.43555158, 0, 0.28326996),
                         (-0.43555158, 0, 0.28326996),
                         (-0.43555158, 0, 0.28326996),
                         (-0.10092762, 0, 0.88816986),
                         (-0.10092762, 0, 0.88816986),
                         (-0.10092762, 0, 0.88816986),
                         (-0.10092762, 0, 0.88816986),
                         (-0.79049277, 0, 0.83941839),
                         (-0.79049277, 0, 0.83941839),
                         (-0.79049277, 0, 0.83941839),
                         (-0.79049277, 0, 0.83941839),
                         (-0.45433386, 0, 0.76645116),
                         (-0.45433386, 0, 0.76645116),
                         (-0.45433386, 0, 0.76645116),
                         (-0.45433386, 0, 0.76645116),
                         (-0.64641969, 0, 0.64640673),
                         (-0.84458862, 0, 0.34986654),
                         (-0.91422432, 0, 0),
                         (-0.84458862, 0, -0.34986654),
                         (-0.64641969, 0, -0.64640673),
                         (-0.45283779, 0, -0.76484979),
                         (-0.45283779, 0, -0.76484979),
                         (-0.45283779, 0, -0.76484979),
                         (-0.45283779, 0, -0.76484979),
                         (-0.79049277, 0, -0.83941839),
                         (-0.79049277, 0, -0.83941839),
                         (-0.79049277, 0, -0.83941839),
                         (-0.79049277, 0, -0.83941839),
                         (-0.10092762, 0, -0.88816986),
                         (-0.10092762, 0, -0.88816986),
                         (-0.10092762, 0, -0.88816986),
                         (-0.10092762, 0, -0.88816986),
                         (-0.43555158, 0, -0.28326996),
                         (-0.43555158, 0, -0.28326996),
                         (-0.43555158, 0, -0.28326996),
                         (-0.43555158, 0, -0.28326996),
                         (-0.35575119, 0, -0.63632061),
                         (-0.35575119, 0, -0.63632061),
                         (-0.35575119, 0, -0.63632061),
                         (-0.35575119, 0, -0.63632061),
                         (-0.52874856, 0, -0.52892838),
                         (-0.69110901, 0, -0.28621998),
                         (-0.74792646, 0, 0),
                         (-0.69110901, 0, 0.28621998),
                         (-0.52874856, 0, 0.52892838),
                         (-0.35703261, 0, 0.63881379)])
    return pc.rename(c, 'fatRotArrow180_#')


def triangle():
    c = pc.curve(d=1, p=[(-0.486, 0, -0.8417763), (-0.486, 0, 0.8417763), (0.972, 0, 6.47482068e-016),
                         (-0.486, 0, -0.8417763)])
    return pc.rename(c, 'triangle#')


def circle():
    return pc.circle(c=(0, 0, 0), nr=(1, 0, 0), sw=360, r=1, d=3, ut=0, tol=0.01, s=8, ch=1)


def locator():
    return pc.spaceLocator(n='loc#')


def sphere():
    c = pc.curve(d=1, p=[(0, 0.81, 0),
                         (-0.30997323, 0.7483428, 0),
                         (-0.57275667, 0.57275667, 0),
                         (-0.7483428, 0.30997323, 0),
                         (-0.81, 0, 0),
                         (-0.7483428, -0.30997323, 0),
                         (-0.57275667, -0.57275667, 0),
                         (-0.30997323, -0.7483428, 0),
                         (0, -0.81, 0),
                         (0.30997323, -0.7483428, 0),
                         (0.57275667, -0.57275667, 0),
                         (0.7483428, -0.30997323, 0),
                         (0.81, 0, 0),
                         (0.7483428, 0.30997323, 0),
                         (0.57275667, 0.57275667, 0),
                         (0.30997323, 0.7483428, 0),
                         (0, 0.81, 0),
                         (0, 0.7483428, 0.30997323),
                         (0, 0.57275667, 0.57275667),
                         (0, 0.30997323, 0.7483428),
                         (0, 0, 0.81),
                         (0, -0.30997323, 0.7483428),
                         (0, -0.57275667, 0.57275667),
                         (0, -0.7483428, 0.30997323),
                         (0, -0.81, 0),
                         (0, -0.7483428, -0.30997323),
                         (0, -0.57275667, -0.57275667),
                         (0, -0.30997323, -0.7483428),
                         (0, 0, -0.81),
                         (0, 0.30997323, -0.7483428),
                         (0, 0.57275667, -0.57275667),
                         (0, 0.7483428, -0.30997323),
                         (0, 0.81, 0),
                         (-0.30997323, 0.7483428, 0),
                         (-0.57275667, 0.57275667, 0),
                         (-0.7483428, 0.30997323, 0),
                         (-0.81, 0, 0),
                         (-0.7483428, 0, 0.30997323),
                         (-0.57275667, 0, 0.57275667),
                         (-0.30997323, 0, 0.7483428),
                         (0, 0, 0.81),
                         (0.30997323, 0, 0.7483428),
                         (0.57275667, 0, 0.57275667),
                         (0.7483428, 0, 0.30997323),
                         (0.81, 0, 0),
                         (0.7483428, 0, -0.30997323),
                         (0.57275667, 0, -0.57275667),
                         (0.30997323, 0, -0.7483428),
                         (0, 0, -0.81),
                         (-0.30997323, 0, -0.7483428),
                         (-0.57275667, 0, -0.57275667),
                         (-0.7483428, 0, -0.30997323),
                         (-0.81, 0, 0),
                         (-0.81, 0, 0)])
    return pc.rename(c, 'sphere#')


def plus():
    c = pc.curve(d=1, p=[(0, 1, 0), (0, -1, 0), (0, 0, 0), (-1, 0, 0), (1, 0, 0), (0, 0, 0), (0, 0, 1), (0, 0, -1)])
    return pc.rename(c, 'plus#')


def build_world_pos_loc(name):
    """This method will create world pos loc for position dummy modules"""
    world_pos_loc = (name + 'worldPos_loc')

    if not pc.objExists(world_pos_loc):
        world_pos_loc = pc.spaceLocator(p=(0, 0, 0), n=(name + 'worldPos_loc'))
        # TODO: this needs to be better determined or based on a pref
        pc.setAttr((world_pos_loc + 'Shape.localScaleX'), .1)
        pc.setAttr((world_pos_loc + 'Shape.localScaleY'), .1)
        pc.setAttr((world_pos_loc + 'Shape.localScaleZ'), .1)
    return world_pos_loc


# TODO: create better doc string
def swap(control_func, control=None):
    """
    Replaces shape of selected control for new shape created by passed in control_func
    """
    if control is None:
        control = pc.ls(selection=True)[0]

    swap_control = control_func()  # create_control("swapControl", index)
    # pc.select(control) #pc.select("swapControl")
    # swap_control = pc.ls(selection=True)[0]
    child_shapes = pc.listRelatives(control, s=True)
    pc.delete(pc.parentConstraint(control, swap_control, mo=False))
    pc.parent(swap_control, control)
    pc.makeIdentity(swap_control)
    for child in child_shapes:
        pc.delete(child)
    child_shapes = pc.listRelatives(swap_control, s=True)
    for child in child_shapes:
        pc.parent(child, control, r=True, s=True)
    pc.delete(swap_control)


# TODO: create better doc string
def combine(control_func, control=None):
    """
    Combines shape of selected control with new shape from index
    """
    if control is None:
        control = pc.ls(selection=True)[0]

    swap_control = control_func()
    # create_control("swapControl", index)
    # pc.select("swapControl")
    # swap_control = pc.ls(selection=True)[0]
    pc.parent(swap_control, control)
    pc.makeIdentity(swap_control)
    child_shapes = pc.listRelatives(swap_control, s=True)
    for child in child_shapes:
        pc.parent(child, control, r=True, s=True)
    pc.delete(swap_control)


def string_to_shape(shape):
    """Returns curve shape that matches string input"""

    if shape == 'arrow':
        return arrow()

    if shape == 'circleCross':
        return circle_cross()

    if shape == 'sphereCross':
        return sphere_cross()

    if shape == 'pyramid':
        return pyramid()

    if shape == 'pin1':
        return pin1()

    if shape == 'directions':
        return directions()

    if shape == 'trans':
        return trans()

    if shape == 'foot':
        return foot()

    if shape == 'rotArrow':
        return rot_arrow()

    if shape == 'circleOrient':
        return circle_orient()

    if shape == 'cross':
        return cross()

    if shape == 'square':
        return square()

    if shape == 'cube1':
        return cube1()

    if shape == 'orient':
        return orient()

    if shape == 'arc180':
        return arc180()

    if shape == 'arc240':
        return arc240()

    if shape == 'cone':
        return cone()

    if shape == 'thinSingleArrow':
        return thin_single_arrow()

    if shape == 'thinDoubleArrow':
        return thin_double_arrow()

    if shape == 'thinRotArrow90':
        return thin_rot_arrow90()

    if shape == 'thinRotArrow180':
        return thin_rot_arrow180()

    if shape == 'thinCross':
        return thin_cross()

    if shape == 'fatCross':
        return fat_cross()

    if shape == 'fatArc180':
        return fat_rot_arrow180()

    if shape == 'pin2':
        return pin2()

    if shape == 'fatDoubleArrow':
        return fat_double_arrow()

    if shape == 'fatRotArrow90':
        return fat_rot_arrow90()

    if shape == 'fatRotArrow180':
        return fat_rot_arrow180()

    if shape == 'cube2':
        return cube2()

    if shape == 'triangle':
        return triangle()

    if shape == 'circle':
        return circle()

    # TODO: try to remove the need for this to be passed in as a shape
    if shape == 'null' or shape == 'group' or shape == 'grp':
        return pc.group(em=True, n='grp#')

    if shape == 'locator' or shape == 'loc':
        return locator()

    if shape == 'sphere':
        return sphere()

    if shape == 'plus':
        return plus()

    if shape == 'joint' or shape == 'jnt':
        pc.select(cl=True)
        control = pc.joint()
        pc.select(cl=True)
        return control
